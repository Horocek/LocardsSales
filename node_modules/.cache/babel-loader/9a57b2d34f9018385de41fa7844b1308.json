{"ast":null,"code":"var _jsxFileName = \"/Users/maximpodorogin/Desktop/weather/weather/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport { fetchData } from './utils/Api';\nimport { parsToTemperature } from './utils/Tools';\nimport { XAxis, YAxis, LineChart, CartesianGrid, Line, Legend, Tooltip } from \"recharts\";\n\nconst getWeather = async city => await parsToTemperature(await fetchData(city));\n\nclass Weather extends Component {\n  constructor() {\n    super();\n    this.state = {\n      city: 'stavropol',\n      dataWeather: [{\n        name: \"0\",\n        temperature: 15\n      }, {\n        name: \"1\",\n        temperature: 15\n      }]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async buttonGetWeather() {\n    this.setState({\n      dataWeather: await getWeather(this.state.city)\n    });\n  }\n\n  graphDraw() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      width: 1100,\n      height: 300,\n      data: this.state.dataWeather,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n        percent: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      stroke: \"#000\",\n      position: \"insideBottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      unit: \"\\xB0\",\n      dataKey: \"temperature\",\n      stroke: \"#000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CartesianGrid, {\n      stroke: \"#eee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"temperature\",\n      stroke: \"#12b202\",\n      activeDot: {\n        r: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.setState.city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"stavropol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"\\u0413\\u0440\\u0435\\u0439\\u043F\\u0444\\u0440\\u0443\\u0442\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"lime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"\\u041B\\u0430\\u0439\\u043C\"), /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      value: \"coconut\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"\\u041A\\u043E\\u043A\\u043E\\u0441\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mango\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"\\u041C\\u0430\\u043D\\u0433\\u043E\"))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: async () => {\n        await this.buttonGetWeather();\n        console.log(this.state.city);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \" \\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u043E\\u0433\\u043E\\u0434\\u0443 \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 59\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 68\n      }\n    }), this.graphDraw());\n  }\n\n}\n\nexport { Weather };","map":{"version":3,"sources":["/Users/maximpodorogin/Desktop/weather/weather/src/App.js"],"names":["React","Component","fetchData","parsToTemperature","XAxis","YAxis","LineChart","CartesianGrid","Line","Legend","Tooltip","getWeather","city","Weather","constructor","state","dataWeather","name","temperature","handleChange","bind","handleSubmit","buttonGetWeather","setState","graphDraw","top","right","left","bottom","percent","r","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport {fetchData} from './utils/Api'\nimport {parsToTemperature} from './utils/Tools'\nimport {\n  XAxis,\n  YAxis,\n  LineChart,\n  CartesianGrid,\n  Line,\n  Legend,\n  Tooltip\n} from \"recharts\";\n\nconst getWeather = async (city) =>  await parsToTemperature(await fetchData(city));\n\nclass Weather extends Component \n{\n    constructor(){\n        super();\n        this.state = {city: 'stavropol',\n            dataWeather: [{name : \"0\", temperature : 15},{name : \"1\", temperature : 15}]\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    async buttonGetWeather() {\n        this.setState({dataWeather : await getWeather(this.state.city),  })\n    }\n    graphDraw(){\n         return(\n            <div>\n                <LineChart width={1100} height={300} data={this.state.dataWeather}  \n                    margin={ { top: 5, right: 30, left: 20, bottom: 5, percent : 10} }>\n                    <XAxis dataKey=\"name\" stroke=\"#000\" position=\"insideBottom\"/>\n                    <YAxis  unit = \"°\" dataKey=\"temperature\" stroke=\"#000\"/>\n                    <Tooltip />\n                    <Legend />\n                    <CartesianGrid stroke=\"#eee\"/>\n                    <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#12b202\" activeDot={{ r: 8 }}/>\n                </LineChart>\n            </div> \n        )   \n    }\n    render() {\n        \n        return (\n      \n\n   \n        \n        <div>\n            <form>\n            <select onChange={this.setState.city}>\n                <option value=\"stavropol\">Грейпфрут</option>\n                <option value=\"lime\">Лайм</option>\n                <option selected value=\"coconut\">Кокос</option>\n                <option value=\"mango\">Манго</option>\n            </select>\n            </form>\n            <button onClick = { \n                async () => {\n                await this.buttonGetWeather();\n                console.log(this.state.city);\n                }\n            }> Получить погоду </button><br></br><br></br><br></br><br></br>\n           {this.graphDraw()}\n        </div>\n        );\n    }\n}   \n\nexport {Weather};\n"]},"metadata":{},"sourceType":"module"}