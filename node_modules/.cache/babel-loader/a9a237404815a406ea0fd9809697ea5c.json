{"ast":null,"code":"var _jsxFileName = \"/Users/maximpodorogin/Desktop/Sales/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport { fetchData } from './utils/Api';\nimport { parsSales } from './utils/Tools';\n\nconst getInfo = async (login, pass, card) => await parsSales(await fetchData(login, pass, card));\n\nconst cardIndex = 0;\nconst salesIndex = 1;\n\nconst ListItem = props => {\n  return /*#__PURE__*/React.createElement(\"h\", {\n    style: {\n      color: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }\n  }, props.value);\n};\n\nclass InputCreds extends Component {\n  constructor() {\n    super();\n    this.state = {\n      login: 'Login',\n      pass: 'Pass',\n      card: 'card number',\n      cardInfo: [false, []]\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async buttonGetSales() {\n    this.setState({\n      cardInfo: await getInfo(this.state.login, this.state.pass, this.state.card)\n    });\n  }\n\n  salesDraw(props) {\n    if (this.state.cardInfo[0] === false) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 54\n      }\n    }, this.state.cardInfo[1]);\n    const array = this.state.cardInfo[salesIndex];\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, array.map(item => {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        value: `\n                    Дата операции - ${item.date} \n                    сумма чека - ${item.amount} \n                    накопленно бонусов - ${item.charge} \n                    списано бонусов - ${item.write}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }));\n    }));\n  }\n\n  cardInfoDraw(props) {\n    if (this.state.cardInfo[0] === false) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 54\n      }\n    });\n    const card = this.state.cardInfo[cardIndex];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u043B\\u0430\\u0434\\u0435\\u043B\\u0435\\u0446 \\u043A\\u0430\\u0440\\u0442\\u044B :\", card.lastName, \" \", card.firstName, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 49\n      }\n    }), \"\\u0414\\u0435\\u043D\\u044C \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\", card.birthday, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 32\n      }\n    }), \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\", card.phone, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }), card.balance, \"\\u0411\\u0430\\u043B\\u0430\\u043D\\u0441\", card.discount, card.cashback, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  inputForm() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"\\u041B\\u043E\\u0433\\u0438\\u043D:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"login\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 86\n      }\n    }), \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"pass\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 86\n      }\n    }), \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043A\\u0430\\u0440\\u0442\\u044B:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"card\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 86\n      }\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: async () => {\n        await this.buttonGetSales();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \" \\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 52\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 61\n      }\n    }), this.inputForm(), this.cardInfoDraw(), this.salesDraw());\n  }\n\n}\n\nexport { InputCreds };","map":{"version":3,"sources":["/Users/maximpodorogin/Desktop/Sales/src/App.js"],"names":["React","Component","fetchData","parsSales","getInfo","login","pass","card","cardIndex","salesIndex","ListItem","props","color","value","InputCreds","constructor","state","cardInfo","handleChange","bind","event","target","name","setState","buttonGetSales","salesDraw","array","map","item","date","amount","charge","write","cardInfoDraw","lastName","firstName","birthday","phone","balance","discount","cashback","inputForm","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport {fetchData} from './utils/Api'\nimport {parsSales} from './utils/Tools'\n\n\nconst getInfo = async (login, pass, card) =>  await parsSales(await fetchData(login, pass, card));\nconst cardIndex = 0;\nconst salesIndex = 1;\nconst  ListItem = (props) => \n{\n    return <h style={{ color: 'green' }}>{props.value}</h>;\n}\n\n\nclass InputCreds extends Component \n{\n    constructor(){\n        super();\n        this.state = {\n            login: 'Login',\n            pass: 'Pass',\n            card: 'card number',\n            cardInfo : [false,[]],\n        };\n        this.handleChange = this.handleChange.bind(this);\n  \n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n\n    async buttonGetSales() {\n        this.setState({cardInfo : await getInfo(this.state.login, this.state.pass, this.state.card)})\n    }\n\n    salesDraw(props){\n        \n        if (this.state.cardInfo[0] === false) return(<div>{this.state.cardInfo[1]}</div>);\n        const array = this.state.cardInfo[salesIndex];\n         return(\n            <ul>\n                {\n                array.map((item) => {\n                return <ul>\n                    <ListItem value={`\n                    Дата операции - ${item.date} \n                    сумма чека - ${item.amount} \n                    накопленно бонусов - ${item.charge} \n                    списано бонусов - ${item.write}`}/> \n                    </ul>\n                }\n                )}\n            </ul>\n        )\n        \n    }\n    cardInfoDraw(props){\n        \n        if (this.state.cardInfo[0] === false) return(<div></div>);\n        const card = this.state.cardInfo[cardIndex];\n         return(\n            <div>\n                Владелец карты : \n                {card.lastName} {card.firstName}<br></br>\n                День рождения\n                {card.birthday}<br></br>\n                Телефон\n                {card.phone}<br></br>\n                {card.balance}\n                Баланс\n                {card.discount}\n                {card.cashback}\n                \n                <br></br>\n            </div>\n        )\n        \n    }\n    \n\n    inputForm(){\n         return(\n            <form>\n            <label>\n              Логин:\n              <input type=\"text\" name=\"login\" onChange={this.handleChange}/><br></br><br></br>\n              Пароль:\n              <input type=\"text\" name='pass' onChange={this.handleChange} /><br></br><br></br>\n              Номер карты:\n              <input type=\"text\" name='card' onChange={this.handleChange} /><br></br><br></br>\n            </label>\n          </form>\n        )   \n    }\n    render() {\n        \n        return (\n            <div> \n            <button onClick = { \n                async () => {\n                await this.buttonGetSales();\n                }\n            }> Получить </button><br></br><br></br><br></br><br></br>\n           {this.inputForm()}\n           {this.cardInfoDraw()}\n           {this.salesDraw()}\n        </div>\n        );\n    }\n}  \n\n\nexport {InputCreds};\n"]},"metadata":{},"sourceType":"module"}