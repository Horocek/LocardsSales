{"ast":null,"code":"const timeConverter = unixTime => {\n  const months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\n  const date = new Date(unixTime * 1000);\n  return `${date.getDate()}-${months[date.getMonth()]}-${date.getFullYear()}`;\n};\n\nconst salesPars = array => {\n  return array.filter(item => !item.isCanceled).map(item => {\n    return {\n      amount: item.amount,\n      write: item.bonusesWriteOff,\n      charge: item.bonusesCharge,\n      date: timeConverter(item.createdAt)\n    };\n  });\n};\n\nconst parsSales = data => {\n  if (!data[0]) return data;\n  data[1] = salesPars(data[1]);\n  return data;\n};\n\nexport { parsSales };","map":{"version":3,"sources":["/Users/maximpodorogin/Desktop/Sales/src/utils/Tools.js"],"names":["timeConverter","unixTime","months","date","Date","getDate","getMonth","getFullYear","salesPars","array","filter","item","isCanceled","map","amount","write","bonusesWriteOff","charge","bonusesCharge","createdAt","parsSales","data"],"mappings":"AAEA,MAAMA,aAAa,GAAGC,QAAQ,IAAI;AAChC,QAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EACX,IADW,EACL,IADK,EACC,IADD,EAEX,IAFW,EAEL,IAFK,EAEC,IAFD,EAGX,IAHW,EAGL,IAHK,EAGC,IAHD,CAAf;AAKA,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASH,QAAQ,GAAG,IAApB,CAAb;AACA,SAAQ,GAAEE,IAAI,CAACE,OAAL,EAAe,IAAGH,MAAM,CAACC,IAAI,CAACG,QAAL,EAAD,CAAkB,IAAGH,IAAI,CAACI,WAAL,EAAmB,EAA1E;AACD,CARD;;AASA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,SAAOA,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAI,CAACA,IAAI,CAACC,UAA3B,EAAuCC,GAAvC,CAA4CF,IAAD,IAAU;AAC1D,WAAO;AACDG,MAAAA,MAAM,EAAEH,IAAI,CAACG,MADZ;AAEDC,MAAAA,KAAK,EAAEJ,IAAI,CAACK,eAFX;AAGDC,MAAAA,MAAM,EAAEN,IAAI,CAACO,aAHZ;AAIDf,MAAAA,IAAI,EAAEH,aAAa,CAACW,IAAI,CAACQ,SAAN;AAJlB,KAAP;AAMC,GAPI,CAAP;AAQD,CATD;;AAWA,MAAMC,SAAS,GAAIC,IAAD,IAAS;AACzB,MAAI,CAACA,IAAI,CAAC,CAAD,CAAT,EAAc,OAAOA,IAAP;AAChBA,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUb,SAAS,CAACa,IAAI,CAAC,CAAD,CAAL,CAAnB;AACA,SAAOA,IAAP;AACC,CAJD;;AAQA,SAAQD,SAAR","sourcesContent":["\n\nconst timeConverter = unixTime => {\n  const months = ['01', '02', '03',\n      '04', '05', '06',\n      '07', '08', '09',\n      '10', '11', '12'\n  ];\n  const date = new Date(unixTime * 1000);\n  return `${date.getDate()}-${months[date.getMonth()]}-${date.getFullYear()}`;\n}\nconst salesPars = array => {\n  return array.filter(item => !item.isCanceled).map((item) => {\n    return {\n          amount: item.amount,\n          write: item.bonusesWriteOff,\n          charge: item.bonusesCharge,\n          date: timeConverter(item.createdAt)\n      } \n    });\n}\n\nconst parsSales = (data) =>{\n  if (!data[0]) return data;\ndata[1] = salesPars(data[1]);\nreturn data;\n}\n\n\n\nexport {parsSales};"]},"metadata":{},"sourceType":"module"}