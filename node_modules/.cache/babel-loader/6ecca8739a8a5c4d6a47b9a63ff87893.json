{"ast":null,"code":"var _jsxFileName = \"/Users/maximpodorogin/Desktop/weather/weather/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Weather, Fill } from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B: \\u041F\\u0440\\u043E\\u0441\\u0442\\u0430\\u044F \\u043B\\u0438\\u043D\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 42\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 51\n  }\n}), /*#__PURE__*/React.createElement(Weather, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B: \\u0417\\u0430\\u043B\\u0438\\u0442\\u0430\\u044F \\u0437\\u043E\\u043D\\u0430\"), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 41\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 50\n  }\n}), /*#__PURE__*/React.createElement(Fill, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));\n\nfunction Example() {\n  // Объявление переменной состояния, которую мы назовём \"count\"\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"\\u0412\\u044B \\u043A\\u043B\\u0438\\u043A\\u043D\\u0443\\u043B\\u0438 \", count, \" \\u0440\\u0430\\u0437\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"\\u041D\\u0430\\u0436\\u043C\\u0438 \\u043D\\u0430 \\u043C\\u0435\\u043D\\u044F\"));\n}\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/maximpodorogin/Desktop/weather/weather/src/index.js"],"names":["React","useState","ReactDOM","Weather","Fill","serviceWorker","render","document","getElementById","Example","count","setCount","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,SAAQC,OAAR,EAAiBC,IAAjB,QAA4B,OAA5B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAH,QAAQ,CAACI,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0JADF,eACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADvC,eACgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADhD,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oJAHF,eAGsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHtC,eAG+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAH/C,eAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,CADF,EAOEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF;;AASA,SAASC,OAAT,GAAmB;AACjB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAAgBS,KAAhB,wBADF,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAFF,CADF;AAQD;;AACDL,aAAa,CAACO,UAAd","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Weather, Fill} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>График погоды: Простая линия</h1><br></br><br></br>\n    <Weather />\n    <h1>График погоды: Залитая зона</h1><br></br><br></br>\n    <Fill />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nfunction Example() {\n  // Объявление переменной состояния, которую мы назовём \"count\"\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>Вы кликнули {count} раз</p>\n      <button onClick={() => setCount(count + 1)}>\n        Нажми на меня\n      </button>\n    </div>\n  );\n}\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}