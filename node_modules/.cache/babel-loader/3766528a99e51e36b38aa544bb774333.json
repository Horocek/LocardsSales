{"ast":null,"code":"var _jsxFileName = \"/Users/maximpodorogin/Desktop/weather/weather/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport { fetchData } from './utils/Api';\nimport { XAxis, YAxis, LineChart, CartesianGrid, Line, Label } from \"recharts\";\nconst weather = fetchData();\n\nconst averageValue = (min, max) => Math.round((min + max) / 2);\n\nconst temperature = weather.list.map(item => {\n  return {\n    name: item.dt_txt.slice(8, 10),\n    temperature: averageValue(item.main.temp_min, item.main.temp_max)\n  };\n});\n\nclass Weather extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(LineChart, {\n      width: 1000,\n      height: 300,\n      data: temperature,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      stroke: \"#000\",\n      angle: \"45\",\n      position: \"insideBottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      unit: \"\\xB0\",\n      dataKey: \"temperature\",\n      stroke: \"#000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      value: \"\\u0422\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430\",\n      offset: 5,\n      position: \"insideLeft\",\n      angle: \"-90\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(CartesianGrid, {\n      stroke: \"#eee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"temperature\",\n      stroke: \"#12b202\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport { Weather };","map":{"version":3,"sources":["/Users/maximpodorogin/Desktop/weather/weather/src/App.js"],"names":["React","Component","fetchData","XAxis","YAxis","LineChart","CartesianGrid","Line","Label","weather","averageValue","min","max","Math","round","temperature","list","map","item","name","dt_txt","slice","main","temp_min","temp_max","Weather","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SACEC,KADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,aAJF,EAKEC,IALF,EAMEC,KANF,QAOO,UAPP;AAUA,MAAMC,OAAO,GAAGP,SAAS,EAAzB;;AAEA,MAAMQ,YAAY,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAcC,IAAI,CAACC,KAAL,CAAW,CAACH,GAAG,GAAGC,GAAP,IAAc,CAAzB,CAAnC;;AAGA,MAAMG,WAAW,GAAGN,OAAO,CAACO,IAAR,CAAaC,GAAb,CAAkBC,IAAD,IAAW;AAC9C,SAAO;AACLC,IAAAA,IAAI,EAAGD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CADF;AAELN,IAAAA,WAAW,EAAGL,YAAY,CAACQ,IAAI,CAACI,IAAL,CAAUC,QAAX,EAAqBL,IAAI,CAACI,IAAL,CAAUE,QAA/B;AAFrB,GAAP;AAGD,CAJmB,CAApB;;AAMA,MAAMC,OAAN,SAAsBxB,SAAtB,CACA;AACEyB,EAAAA,MAAM,GAAG;AACP,wBACA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,IAAlB;AAAwB,MAAA,MAAM,EAAE,GAAhC;AAAqC,MAAA,IAAI,EAAEX,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,MAAM,EAAC,MAA7B;AAAoC,MAAA,KAAK,EAAC,IAA1C;AAA+C,MAAA,QAAQ,EAAC,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAG,MAAf;AAAmB,MAAA,OAAO,EAAC,aAA3B;AAAyC,MAAA,MAAM,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,oEAAb;AAA2B,MAAA,MAAM,EAAE,CAAnC;AAAsC,MAAA,QAAQ,EAAC,YAA/C;AAA4D,MAAA,KAAK,EAAG,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,eAKI,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,aAA9B;AAA4C,MAAA,MAAM,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADA;AAUD;;AAZH;;AAcA,SAAQU,OAAR","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport {fetchData} from './utils/Api'\nimport {\n  XAxis,\n  YAxis,\n  LineChart,\n  CartesianGrid,\n  Line,\n  Label\n} from \"recharts\";\n\n\nconst weather = fetchData();\n\nconst averageValue = (min, max) => Math.round((min + max) / 2);\n\n\nconst temperature = weather.list.map((item) =>  { \n  return {\n    name : item.dt_txt.slice(8, 10),\n    temperature : averageValue(item.main.temp_min, item.main.temp_max)}\n});\n\nclass Weather extends Component \n{\n  render() {\n    return (\n    <LineChart width={1000} height={300} data={temperature}>\n        <XAxis dataKey=\"name\" stroke=\"#000\" angle=\"45\" position=\"insideBottom\"/>\n        <YAxis  unit = \"°\" dataKey=\"temperature\" stroke=\"#000\">\n            <Label value=\"Температура\" offset={5} position=\"insideLeft\" angle = \"-90\"/>\n        </YAxis>\n        <CartesianGrid stroke=\"#eee\"/>\n        <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#12b202\" />\n    </LineChart>\n    );\n  }\n}\nexport {Weather};\n"]},"metadata":{},"sourceType":"module"}