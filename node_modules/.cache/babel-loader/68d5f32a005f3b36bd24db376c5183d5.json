{"ast":null,"code":"var _jsxFileName = \"/Users/maximpodorogin/Desktop/Sales/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport { fetchData } from './utils/Api';\nimport { parsSales } from './utils/Tools';\n\nconst getInfo = async (login, pass, card) => await parsSales(await fetchData(login, pass, card));\n\nconst cardIndex = 0;\nconst salesIndex = 1;\n\nconst ListItem = props => {\n  return /*#__PURE__*/React.createElement(\"h\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }\n  }, props.value);\n};\n\nclass InputCreds extends Component {\n  constructor() {\n    super();\n    this.state = {\n      login: 'Login',\n      pass: 'Pass',\n      card: 'card number',\n      cardInfo: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async buttonGetSales() {\n    this.setState({\n      cardInfo: await getInfo(this.state.login, this.state.pass, this.state.card)\n    });\n    console.log(this.state.cardInfo[cardIndex]);\n    console.log(this.state.cardInfo[salesIndex]);\n  }\n\n  cardInfoDraw(props) {\n    const array = this.state.cardInfo[salesIndex];\n    if (array.length === 0) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 40\n      }\n    }, \"\\u043D\\u0435\\u0442\\u0443\");\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, array.map(item => {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        value: `сумма чека - ${item.amount} накопленно ${item.charge}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }));\n    }));\n  }\n\n  inputForm() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"\\u041B\\u043E\\u0433\\u0438\\u043D:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"login\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 86\n      }\n    }), \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"pass\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 86\n      }\n    }), \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043A\\u0430\\u0440\\u0442\\u044B:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"card\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 86\n      }\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: async () => {\n        await this.buttonGetSales();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \" \\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 52\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 61\n      }\n    }), this.inputForm(), this.cardInfoDraw());\n  }\n\n}\n\nexport { InputCreds };","map":{"version":3,"sources":["/Users/maximpodorogin/Desktop/Sales/src/App.js"],"names":["React","Component","fetchData","parsSales","getInfo","login","pass","card","cardIndex","salesIndex","ListItem","props","color","value","InputCreds","constructor","state","cardInfo","handleChange","bind","event","target","name","setState","buttonGetSales","console","log","cardInfoDraw","array","length","map","item","amount","charge","inputForm","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport {fetchData} from './utils/Api'\nimport {parsSales} from './utils/Tools'\n\n\nconst getInfo = async (login, pass, card) =>  await parsSales(await fetchData(login, pass, card));\nconst cardIndex = 0;\nconst salesIndex = 1;\nconst  ListItem = (props) => \n{\n    return <h style={{ color: 'red' }}>{props.value}</h>;\n}\n\n\nclass InputCreds extends Component \n{\n    constructor(){\n        super();\n        this.state = {\n            login: 'Login',\n            pass: 'Pass',\n            card: 'card number',\n            cardInfo : [],\n        };\n        this.handleChange = this.handleChange.bind(this);\n  \n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n\n    async buttonGetSales() {\n        this.setState({cardInfo : await getInfo(this.state.login, this.state.pass, this.state.card)})\n        console.log(this.state.cardInfo[cardIndex]);\n        console.log(this.state.cardInfo[salesIndex]);\n    }\n\n    cardInfoDraw(props){\n        const array = this.state.cardInfo[salesIndex];\n        if (array.length === 0) return(<div>нету</div>);\n         return(\n            <ul>\n                {\n                array.map((item) => {\n                return <ul>\n                    <ListItem value={`сумма чека - ${item.amount} накопленно ${item.charge}`}/> \n                    </ul>\n                }\n                )}\n            </ul>\n        )\n        \n    }\n\n    inputForm(){\n         return(\n            <form>\n            <label>\n              Логин:\n              <input type=\"text\" name=\"login\" onChange={this.handleChange}/><br></br><br></br>\n              Пароль:\n              <input type=\"text\" name='pass' onChange={this.handleChange} /><br></br><br></br>\n              Номер карты:\n              <input type=\"text\" name='card' onChange={this.handleChange} /><br></br><br></br>\n            </label>\n          </form>\n        )   \n    }\n    render() {\n        \n        return (\n            <div> \n            <button onClick = { \n                async () => {\n                await this.buttonGetSales();\n                }\n            }> Получить </button><br></br><br></br><br></br><br></br>\n           {this.inputForm()}{this.cardInfoDraw()}\n        </div>\n        );\n    }\n}  \n\n\nexport {InputCreds};\n"]},"metadata":{},"sourceType":"module"}